#jinja2:trim_blocks: False
#
# {{ ansible_managed }}
#

*filter
:INPUT {{ iptables__filter_input_policy|upper }} [0:0]
:FORWARD {{ iptables__filter_forward_policy|upper }} [0:0]
:OUTPUT {{ iptables__filter_output_policy|upper }} [0:0]

-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -m conntrack --ctstate INVALID -j DROP
{%- for rule in iptables__filter_rules -%}
{%    if rule.chain|lower == "input" -%}
{%      if ( rule.protocol is defined and rule.protocol|lower == "icmp" ) or ( rule.not_protocol is defined and rule.not_protocol|lower == "icmp" ) %}
-A {{ rule.chain|upper }} {% if rule.not_in_interface is defined -%} ! -i {{ rule.not_in_interface }} {% elif rule.in_interface is defined -%} -i {{ rule.in_interface }} {% endif -%} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol }} {% elif rule.protocol is defined -%} -p {{ rule.protocol }} {% endif -%} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.icmp_type is defined -%} --icmp-type {{ rule.icmp_type }} {% endif -%} -m conntrack --ctstate NEW {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%      else %}
-A {{ rule.chain|upper }} {% if rule.not_in_interface is defined -%} ! -i {{ rule.not_in_interface }} {% elif rule.in_interface is defined -%} -i {{ rule.in_interface }} {% endif -%} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol|lower }} {% elif rule.protocol is defined -%} -p {{ rule.protocol|lower }} {% endif -%} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_source_port is defined -%} ! --sport {{ rule.not_source_port }} {% elif rule.source_port is defined -%} --sport {{ rule.source_port }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.not_destination_port is defined -%} ! --dport {{ rule.not_destination_port }} {% elif rule.destination_port is defined -%} --dport {{ rule.destination_port }} {% endif -%} {% if rule.protocol is defined and rule.protocol == "tcp" -%} --syn {% endif -%} -m conntrack --ctstate NEW {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%-     endif %}
{%-   endif %}
{%- endfor %}

-A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
{%- for rule in iptables__filter_rules -%}
{%    if rule.chain|lower == "forward" -%}
{%      if ( rule.protocol is defined and rule.protocol|lower == "icmp" ) or ( rule.not_protocol is defined and rule.not_protocol|lower == "icmp" ) %}
-A {{ rule.chain|upper }} {% if rule.not_in_interface is defined -%} ! -i {{ rule.not_in_interface }} {% elif rule.in_interface is defined -%} -i {{ rule.in_interface }} {% endif -%} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol }} {% elif rule.protocol is defined -%} -p {{ rule.protocol }} {% endif -%} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.icmp_type is defined -%} --icmp-type {{ rule.icmp_type }} {% endif -%} {% if rule.not_out_interface is defined -%} ! -o {{ rule.not_out_interface }} {% elif rule.out_interface is defined -%} -o {{ rule.out_interface }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%      else %}
-A {{ rule.chain|upper }} {% if rule.not_in_interface is defined -%} ! -i {{ rule.not_in_interface }} {% elif rule.in_interface is defined -%} -i {{ rule.in_interface }} {% endif -%} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol|lower }} {% elif rule.protocol is defined -%} -p {{ rule.protocol|lower }} {% endif -%} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_source_port is defined -%} ! --sport {{ rule.not_source_port }} {% elif rule.source_port is defined -%} --sport {{ rule.source_port }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.not_destination_port is defined -%} ! --dport {{ rule.not_destination_port }} {% elif rule.destination_port is defined -%} --dport {{ rule.destination_port }} {% endif -%} {% if rule.not_out_interface is defined -%} ! -o {{ rule.not_out_interface }} {% elif rule.out_interface is defined -%} -o {{ rule.out_interface }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%-     endif %}
{%-   endif %}
{%- endfor %}

-A OUTPUT -p icmp --icmp-type redirect -j DROP
{%- for rule in iptables__filter_rules -%}
{%    if rule.chain|lower == "output" -%}
{%      if ( rule.protocol is defined and rule.protocol|lower == "icmp" ) or ( rule.not_protocol is defined and rule.not_protocol|lower == "icmp" ) %}
-A {{ rule.chain|upper }} -p {{ rule.protocol|lower }} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.icmp_type is defined -%} --icmp-type {{ rule.icmp_type }} {% endif -%} {% if rule.not_out_interface is defined -%} ! -o {{ rule.not_out_interface }} {% elif rule.out_interface is defined -%} -o {{ rule.out_interface }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%      else %}
-A {{ rule.chain|upper }} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol|lower }} {% elif rule.protocol is defined -%} -p {{ rule.protocol|lower }} {% endif -%} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_source_port is defined -%} ! --sport {{ rule.not_source_port }} {% elif rule.source_port is defined -%} --sport {{ rule.source_port }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.not_destination_port is defined -%} ! --dport {{ rule.not_destination_port }} {% elif rule.destination_port is defined -%} --dport {{ rule.destination_port }} {% endif -%} {% if rule.not_out_interface is defined -%} ! -o {{ rule.not_out_interface }} {% elif rule.out_interface is defined -%} -o {{ rule.out_interface }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%-     endif %}
{%-   endif %}
{%- endfor %}

COMMIT

*nat
:PREROUTING {{ iptables__nat_prerouting_policy|upper }} [0:0]
{%- if ansible_distribution|lower != 'centos' %}
:INPUT {{ iptables__nat_input_policy|upper }} [0:0]
{%- endif %}
:OUTPUT {{ iptables__nat_output_policy|upper }} [0:0]
:POSTROUTING {{ iptables__nat_postrouting_policy|upper }} [0:0]

-A PREROUTING -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
{%- for rule in iptables__nat_rules -%}
{%    if rule.chain|lower == "prerouting" -%}
{%      if ( rule.protocol is defined and rule.protocol|lower == "icmp" ) or ( rule.not_protocol is defined and rule.not_protocol|lower == "icmp" ) %}
-A {{ rule.chain|upper }} {% if rule.not_in_interface is defined -%} ! -i {{ rule.not_in_interface }} {% elif rule.in_interface is defined -%} -i {{ rule.in_interface }} {% endif -%} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol }} {% elif rule.protocol is defined -%} -p {{ rule.protocol }} {% endif -%} {% if rule.icmp_type is defined -%} --icmp-type {{ rule.icmp_type }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} {% if rule.to_destination is defined -%} -j {{ rule.target|upper }} --to-destination {{ rule.to_destination }} {% else %} -j {{ rule.target|upper }} {% endif -%}
{%      else %}
-A {{ rule.chain|upper }} {% if rule.not_in_interface is defined -%} ! -i {{ rule.not_in_interface }} {% elif rule.in_interface is defined -%} -i {{ rule.in_interface }} {% endif -%} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol|lower }} {% elif rule.protocol is defined -%} -p {{ rule.protocol|lower }} {% endif -%} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_source_port is defined -%} ! --sport {{ rule.not_source_port }} {% elif rule.source_port is defined -%} --sport {{ rule.source_port }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.not_destination_port is defined -%} ! --dport {{ rule.not_destination_port }} {% elif rule.destination_port is defined -%} --dport {{ rule.destination_port }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} {% if rule.to_destination is defined -%} -j {{ rule.target|upper }} --to-destination {{ rule.to_destination }}{% if rule.to_port is defined -%}:{{ rule.to_port }}{% endif -%} {% else %} -j {{ rule.target|upper }} {% endif -%}
{%-     endif %}
{%-   endif %}
{%- endfor %}

{%- if ansible_distribution|lower != 'centos' %}
{%-   for rule in iptables__nat_rules -%}
{%      if rule.chain|lower == "input" -%}
{%        if ( rule.protocol is defined and rule.protocol|lower == "icmp" ) or ( rule.not_protocol is defined and rule.not_protocol|lower == "icmp" ) %}
-A {{ rule.chain|upper }} {% if rule.not_in_interface is defined -%} ! -i {{ rule.not_in_interface }} {% elif rule.in_interface is defined -%} -i {{ rule.in_interface }} {% endif -%} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol }} {% elif rule.protocol is defined -%} -p {{ rule.protocol }} {% endif -%} {% if rule.icmp_type is defined -%} --icmp-type {{ rule.icmp_type }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%        else %}
-A {{ rule.chain|upper }} {% if rule.not_in_interface is defined -%} ! -i {{ rule.not_in_interface }} {% elif rule.in_interface is defined -%} -i {{ rule.in_interface }} {% endif -%} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol|lower }} {% elif rule.protocol is defined -%} -p {{ rule.protocol|lower }} {% endif -%} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_source_port is defined -%} ! --sport {{ rule.not_source_port }} {% elif rule.source_port is defined -%} --sport {{ rule.source_port }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.not_destination_port is defined -%} ! --dport {{ rule.not_destination_port }} {% elif rule.destination_port is defined -%} --dport {{ rule.destination_port }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%-       endif %}
{%-     endif %}
{%-   endfor %}
{%- endif %}

{%- for rule in iptables__nat_rules -%}
{%    if rule.chain|lower == "output" -%}
{%      if ( rule.protocol is defined and rule.protocol|lower == "icmp" ) or ( rule.not_protocol is defined and rule.not_protocol|lower == "icmp" ) %}
-A {{ rule.chain|upper }} -p {{ rule.protocol|lower }} {% if rule.icmp_type is defined -%} --icmp-type {{ rule.icmp_type }} {% endif -%} {% if rule.not_out_interface is defined -%} ! -o {{ rule.not_out_interface }} {% elif rule.out_interface is defined -%} -o {{ rule.out_interface }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%      else %}
-A {{ rule.chain|upper }} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol|lower }} {% elif rule.protocol is defined -%} -p {{ rule.protocol|lower }} {% endif -%} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_source_port is defined -%} ! --sport {{ rule.not_source_port }} {% elif rule.source_port is defined -%} --sport {{ rule.source_port }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.not_destination_port is defined -%} ! --dport {{ rule.not_destination_port }} {% elif rule.destination_port is defined -%} --dport {{ rule.destination_port }} {% endif -%} {% if rule.not_out_interface is defined -%} ! -o {{ rule.not_out_interface }} {% elif rule.out_interface is defined -%} -o {{ rule.out_interface }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} -j {{ rule.target|upper }}
{%-     endif %}
{%-   endif %}
{%- endfor %}

-A POSTROUTING -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
{%- for rule in iptables__nat_rules -%}
{%    if rule.chain|lower == "postrouting" -%}
{%      if ( rule.protocol is defined and rule.protocol|lower == "icmp" ) or ( rule.not_protocol is defined and rule.not_protocol|lower == "icmp" ) %}
-A {{ rule.chain|upper }} -p {{ rule.protocol|lower }} {% if rule.icmp_type is defined -%} --icmp-type {{ rule.icmp_type }} {% endif -%} {% if rule.not_out_interface is defined -%} ! -o {{ rule.not_out_interface }} {% elif rule.out_interface is defined -%} -o {{ rule.out_interface }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} {% if rule.to_destination is defined -%} -j {{ rule.target|upper }} --to {{ rule.to_destination }} {% else %} -j {{ rule.target|upper }} {% endif -%}
{%      else %}
-A {{ rule.chain|upper }} {% if rule.not_protocol is defined -%} ! -p {{ rule.not_protocol|lower }} {% elif rule.protocol is defined -%} -p {{ rule.protocol|lower }} {% endif -%} {% if rule.not_source_address is defined -%} ! -s {{ rule.not_source_address if rule.not_source_address is string else rule.not_source_address | join(',') }} {% elif rule.source_address is defined -%} -s {{ rule.source_address if rule.source_address is string else rule.source_address | join(',') }} {% endif -%} {% if rule.not_source_port is defined -%} ! --sport {{ rule.not_source_port }} {% elif rule.source_port is defined -%} --sport {{ rule.source_port }} {% endif -%} {% if rule.not_destination_address is defined -%} ! -d {{ rule.not_destination_address if rule.not_destination_address is string else rule.not_destination_address | join(',') }} {% elif rule.destination_address is defined -%} -d {{ rule.destination_address if rule.destination_address is string else rule.destination_address | join(',') }} {% endif -%} {% if rule.not_destination_port is defined -%} ! --dport {{ rule.not_destination_port }} {% elif rule.destination_port is defined -%} --dport {{ rule.destination_port }} {% endif -%} {% if rule.not_out_interface is defined -%} ! -o {{ rule.not_out_interface }} {% elif rule.out_interface is defined -%} -o {{ rule.out_interface }} {% endif -%} {% if rule.comment is defined -%} -m comment --comment "{{ rule.comment }}" {% endif -%} {% if rule.match is defined -%} {{ rule.match }} {% endif -%} {% if rule.to_source is defined -%} -j {{ rule.target|upper }} --to-source {{ rule.to_source }} {% else %} -j {{ rule.target|upper }} {% endif -%}
{%-     endif %}
{%-   endif %}
{%- endfor %}
COMMIT
