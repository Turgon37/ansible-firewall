---
# tasks file for iptables
- name: Install the latest version of firewall packages
  become: yes
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - "{{ iptables__packages }}"
  tags: ['firewall', 'iptables']

- name: Determine if knockd is enabled
  set_fact:
    knock_feature_enabled: "{{ True if iptables__knock_rules | length > 0 else False }}"
  tags: ['firewall', 'iptables']

- name: Include knockd init
  include: install-knockd.yml
  when: knock_feature_enabled
  tags: ['firewall', 'iptables']

- name: Assert knockd variables
  assert:
    that:
      - "'{{ item }}' not in {{ iptables__filter_additionnal_chains }}"
      - "'{{ item }}' not in {{ iptables__nat_additionnal_chains }}"
  with_items:
    - '{{ iptables__knock_rules.keys() }}'
  when: knock_feature_enabled
  tags: ['firewall', 'iptables']

- name: Append knockd chains to iptables
  set_fact:
    iptables__filter_additionnal_chains: "{{ iptables__filter_additionnal_chains }} + [ 'KNOCK_{{ item }}' ]"
  with_items:
    - '{{ iptables__knock_rules.keys() }}'
  when: knock_feature_enabled
  tags: ['firewall', 'iptables']

- name: Create automatic redirect rule for knock rules
  set_fact:
    iptables__filter_rules: "[ {{ iptables__knock_rules[item].rule|combine({'target': 'KNOCK_' + item, 'comment': 'KNOCK_' + item + ':: ' + iptables__knock_rules[item].rule.comment|d()})  }} ] + {{ iptables__filter_rules }}"
  with_items:
    - "{{ iptables__knock_rules.keys() }}"
  when: knock_feature_enabled
  tags: ['firewall', 'iptables']

- name: Create knockd configuration
  become: yes
  template:
    src: knockd.conf.j2
    dest: /etc/knockd.conf
    owner: root
    group: root
    mode: 0600
  register: knockd_config_result
  notify:
   - restart knockd
  when: knock_feature_enabled
  tags: ['firewall', 'iptables']

- name: Assert firewall variables
  assert:
    that:
      - "'{{ item }}' not in ['INPUT', 'OUPUT', 'FORWARD', 'POSTROUTING', 'PREROUTING']"
  with_items:
    - "{{ iptables__filter_additionnal_chains }}"
    - "{{ iptables__nat_additionnal_chains }}"
  tags: ['firewall', 'iptables']

- name: Create iptables configuration
  become: yes
  template:
    src: iptables.j2
    dest: "{{ iptables__configuration }}"
    owner: root
    group: root
    mode: 0600
  register: config_result
  notify:
   - restart iptables
  tags: ['firewall', 'iptables']

- name: Create iptables6 configuration
  become: yes
  template:
    src: iptables6.j2
    dest: "{{ iptables6__configuration }}"
    owner: root
    group: root
    mode: 0600
  register: config_result
  notify:
   - restart iptables
  tags: ['firewall', 'iptables']

- name: Ensure iptables is started and enabled on boot
  become: yes
  service:
    name: "{{ iptables__service_name }}"
    state: started
    enabled: yes
  changed_when: False
  tags: ['firewall', 'iptables']
